{"version":3,"sources":["../src/server.js"],"names":["app","get","req","res","status","json","newLocal","module","parent","process","env","NODE_ENV","key","MONGODB_URI","db","LOCALDB_URI","mongoose","connect","useNewUrlParser","useUnifiedTopology","then","console","log","err","listen","routes","router","use"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;AACA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACC,8BAAYA,GAAZ,E,CAED;AACA;;AAEA;;;;;;AAKAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SACXA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uCAArB,CADW;AAAA,CAAb,E,CAIA;;AACA,IAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAxB;;AACA,IAAI,CAACF,QAAL,EAAe;AACb;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuBC,iBAAIC,WAA3B;AACA,MAAMC,EAAE,GAAGF,iBAAIG,WAAJ,IAAmBN,OAAO,CAACC,GAAR,CAAYC,QAA1C,CAHa,CAKb;;AACAK,uBACGC,OADH,CACWH,EADX,EACe;AACXI,IAAAA,eAAe,EAAE,IADN;AAEXC,IAAAA,kBAAkB,EAAE;AAFT,GADf,EAKGC,IALH,CAKQ;AAAA,WAAMC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAN;AAAA,GALR,WAMS,UAAAC,GAAG;AAAA,WAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,GANZ;;AAOAvB,EAAAA,GAAG,CAACwB,MAAJ,CAAWZ,iBAAIF,GAAf,EAAoB;AAAA,WAAMW,OAAO,CAACC,GAAR,kCAAsCV,iBAAIF,GAA1C,EAAN;AAAA,GAApB;AACD,CAdD,MAcO;AACDD,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuBC,iBAAIC,WAA3B;;AACAG,uBACGC,OADH,CACWL,iBAAIC,WADf,EAC4B;AACxBK,IAAAA,eAAe,EAAE,IADO;AAExBC,IAAAA,kBAAkB,EAAE;AAFI,GAD5B,EAKGC,IALH,CAKQ;AAAA,WAAMC,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAN;AAAA,GALR,WAMS,UAAAC,GAAG;AAAA,WAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,GANZ;AAOL,C,CAED;;;AACA,IAAME,MAAM,GAAGC,eAAf;AACA1B,GAAG,CAAC2B,GAAJ,CAAQ,MAAR,EAAgBF,MAAhB;eAEezB,G","sourcesContent":["import express from 'express';\r\nimport mongoose from 'mongoose';\r\nimport passport from 'passport';\r\nimport key from './config/keys';\r\nimport { passportJwt } from './config/passport';\r\nimport router from './routes/api';\r\nimport { middlewares } from './app/middlewares/middlewares';\r\n\r\n// Create express server instance\r\nconst app = express();\r\n\r\n// Middlewares\r\n middlewares(app);\r\n\r\n// Passport Config\r\n//passportJwt(passport);\r\n\r\n/**\r\n * @route   GET /\r\n * @desc    Get index route\r\n * @access  Public\r\n */\r\napp.get('/', (req, res) =>\r\n  res.status(200).json('Welcome to the Loan Management System')\r\n);\r\n\r\n// Check env module\r\nconst newLocal = module.parent;\r\nif (!newLocal) {\r\n  // DB Config\r\n  process.env.NODE_ENV = key.MONGODB_URI;\r\n  const db = key.LOCALDB_URI || process.env.NODE_ENV;\r\n\r\n  // Connect to MongDB\r\n  mongoose\r\n    .connect(db, {\r\n      useNewUrlParser: true,\r\n      useUnifiedTopology: true\r\n    })\r\n    .then(() => console.log('MongoDB Connected'))\r\n    .catch(err => console.log(err));\r\n  app.listen(key.env, () => console.log(`Server running on port ${key.env}`));\r\n} else {\r\n      process.env.NODE_ENV = key.MONGODB_URI;\r\n      mongoose\r\n        .connect(key.MONGODB_URI, {\r\n          useNewUrlParser: true,\r\n          useUnifiedTopology: true\r\n        })\r\n        .then(() => console.log('MongoDB Connected'))\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n// Load routes\r\nconst routes = router;\r\napp.use('/api', routes);\r\n\r\nexport default app;\r\n"],"file":"server.js"}