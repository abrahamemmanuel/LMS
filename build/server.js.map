{"version":3,"sources":["../src/server.js"],"names":["app","use","bodyParser","urlencoded","extended","json","get","req","res","status","db","key","LOCALDB_URI","MONGODB_URI","newLocal","module","parent","listen","env","console","log","mongoose","connect","useNewUrlParser","useUnifiedTopology","then","err","routes","router"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;AACA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAC5BC,EAAAA,QAAQ,EAAE;AADkB,CAAtB,CAAR,E,CAGA;;AACAJ,GAAG,CAACC,GAAJ,CAAQC,uBAAWG,IAAX,EAAR;AAEA;;;;;;AAKAL,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SACXA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB,uCAArB,CADW;AAAA,CAAb,E,CAIA;;AACA,IAAMK,EAAE,GAAGC,iBAAIC,WAAJ,IAAmBD,iBAAIE,WAAlC,C,CAEA;;AACA,IAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAxB;;AACA,IAAI,CAACF,QAAL,EAAe;AACbd,EAAAA,GAAG,CAACiB,MAAJ,CAAWN,iBAAIO,GAAf,EAAoB;AAAA,WAAMC,OAAO,CAACC,GAAR,kCAAsCT,iBAAIO,GAA1C,EAAN;AAAA,GAApB,EADa,CAEb;;AACAG,uBACGC,OADH,CACWZ,EADX,EACe;AACXa,IAAAA,eAAe,EAAE,IADN;AAEXC,IAAAA,kBAAkB,EAAE;AAFT,GADf,EAKGC,IALH,CAKQ;AAAA,WAAMN,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAAN;AAAA,GALR,WAMS,UAAAM,GAAG;AAAA,WAAIP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAAJ;AAAA,GANZ;AAOD,C,CAED;;;AACA,IAAMC,MAAM,GAAGC,eAAf;AACA5B,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgB0B,MAAhB;eAEe3B,G","sourcesContent":["import express from 'express';\r\nimport mongoose from 'mongoose';\r\nimport bodyParser from 'body-parser';\r\nimport key from './config/keys';\r\nimport router from './routes/api';\r\n\r\n// Create express server instance\r\nconst app = express();\r\n\r\n//middleware to parse requests of extended urlencoded\r\napp.use(bodyParser.urlencoded({\r\n  extended: false\r\n}))\r\n//middleware to parse requests of content-type - application/json\r\napp.use(bodyParser.json())\r\n\r\n/**\r\n * @route GET /\r\n * @desc Get index route\r\n * @access Public\r\n */\r\napp.get('/', (req, res) =>\r\n  res.status(200).json('Welcome to the Loan Management System')\r\n);\r\n\r\n// DB Config\r\nconst db = key.LOCALDB_URI || key.MONGODB_URI;\r\n\r\n// Check env module\r\nconst newLocal = module.parent;\r\nif (!newLocal) {\r\n  app.listen(key.env, () => console.log(`Server running on port ${key.env}`));\r\n  // Connect to MongDB\r\n  mongoose\r\n    .connect(db, {\r\n      useNewUrlParser: true,\r\n      useUnifiedTopology: true\r\n    })\r\n    .then(() => console.log('MongoDB Connected'))\r\n    .catch(err => console.log(err));\r\n}\r\n\r\n// Load routes\r\nconst routes = router;\r\napp.use('/api', routes);\r\n\r\nexport default app;\r\n"],"file":"server.js"}