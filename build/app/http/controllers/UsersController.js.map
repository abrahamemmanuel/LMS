{"version":3,"sources":["../../../../src/app/http/controllers/UsersController.js"],"names":["UsersController","req","res","User","findOne","email","body","then","user","status","json","avatar","gravatar","url","s","r","d","newUser","name","password"],"mappings":";;;;;;;AAEA;;AACA;;;;;;;;;;IAEMA,e;;;;;;;;;;AACJ;;;;;iCAKaC,G,EAAKC,G,EAAK;AACrB;AACAC,uBAAKC,OAAL,CAAa;AAAEC,QAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAJ,CAASD;AAAlB,OAAb,EAAwCE,IAAxC,CAA6C,UAAAC,IAAI,EAAI;AACnD;AACA,YAAIA,IAAJ,EAAU;AACR;AACA;AACA,iBAAON,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEL,YAAAA,KAAK,EAAE;AAAT,WAArB,CAAP;AACD,SAJD,MAIO;AACL;AACA;AACA,cAAMM,MAAM,GAAGC,qBAASC,GAAT,CAAaZ,GAAG,CAACK,IAAJ,CAASD,KAAtB,EAA6B;AAC1CS,YAAAA,CAAC,EAAE,KADuC;AAChC;AACVC,YAAAA,CAAC,EAAE,IAFuC;AAEjC;AACTC,YAAAA,CAAC,EAAE,IAHuC,CAGlC;;AAHkC,WAA7B,CAAf,CAHK,CASL;;;AACA,cAAMC,OAAO,GAAG,IAAId,gBAAJ,CAAS;AACvBe,YAAAA,IAAI,EAAEjB,GAAG,CAACK,IAAJ,CAASY,IADQ;AAEvBb,YAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAJ,CAASD,KAFO;AAGvBM,YAAAA,MAAM,EAANA,MAHuB;AAIvBQ,YAAAA,QAAQ,EAAElB,GAAG,CAACK,IAAJ,CAASa;AAJI,WAAT,CAAhB;AAMD;AACF,OAvBD;AAwBD;;;;;;eAGYnB,e","sourcesContent":["/* eslint-disable consistent-return */\r\n/* eslint-disable no-return-assign */\r\nimport gravatar from 'gravatar';\r\nimport User from '../../../database/models/User';\r\n\r\nclass UsersController {\r\n  /**\r\n   * @param: req, res\r\n   * @desc RegisterUser create and save a new user record into users collection\r\n   * @return 200 status code if and only if a new user is created and saved to the users collection\r\n   */\r\n  RegisterUser(req, res) {\r\n    // Search users collection by email\r\n    User.findOne({ email: req.body.email }).then(user => {\r\n      // Check if a user already exist with the email in the users collection\r\n      if (user) {\r\n        // if true then\r\n        // return 400 status code and display 'Email already exist' to the user\r\n        return res.status(400).json({ email: 'Email already exist' });\r\n      } else {\r\n        // Otherwise\r\n        // Get avatar from gravatar\r\n        const avatar = gravatar.url(req.body.email, {\r\n          s: '200', // Size\r\n          r: 'pg', // Rating\r\n          d: 'mm' // Default\r\n        });\r\n\r\n        // Create a new user\r\n        const newUser = new User({\r\n          name: req.body.name,\r\n          email: req.body.email,\r\n          avatar,\r\n          password: req.body.password\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default UsersController;\r\n"],"file":"UsersController.js"}